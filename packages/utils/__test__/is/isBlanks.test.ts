import { expect, test } from "vitest";
import { isBlanks } from "../..";

test("isBlanks", () => {
  expect(isBlanks("")).toBe(true);
  expect(isBlanks(" ")).toBe(true);
  expect(isBlanks("   ")).toBe(true);
  expect(isBlanks("hello")).toBe(false);
  expect(isBlanks("  hello  ")).toBe(false);
  expect(isBlanks(null)).toBe(true);
  expect(isBlanks(undefined)).toBe(true);
  expect(isBlanks(0)).toBe(true);
  expect(isBlanks(1)).toBe(false);
  expect(isBlanks(true)).toBe(false);
  expect(isBlanks(false)).toBe(true);
  expect(isBlanks([])).toBe(true);
  expect(isBlanks({})).toBe(true);
  expect(isBlanks(new Date())).toBe(false);
  expect(isBlanks(new Date("2022-01-01"))).toBe(false);
  expect(isBlanks(new Date("2022-01-41"))).toBe(true);
  expect(isBlanks(new Date("2022-13-01"))).toBe(true);
  expect(isBlanks(new Date("2022-12-01"))).toBe(false);
  expect(isBlanks(() => {})).toBe(false);
  expect(isBlanks(Symbol(""))).toBe(false);
  expect(isBlanks(Symbol())).toBe(true);
  expect(isBlanks(Symbol(0))).toBe(false);
  expect(isBlanks(BigInt(100))).toBe(false);
  expect(isBlanks(BigInt(0))).toBe(true);
  expect(isBlanks(new Set())).toBe(true);
  expect(isBlanks(new Set([1]))).toBe(false);
  expect(isBlanks(new Map())).toBe(true);
  expect(isBlanks(new Map([[1, 2]]))).toBe(false);
});
